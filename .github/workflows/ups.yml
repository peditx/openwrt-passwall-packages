name: Build OpenWrt SDK for Multiple Architectures

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - x86_64
          - aarch64_generic
          - aarch64_cortex-a53
          - aarch64_cortex-a72
          - arm_cortex-a7
          - arm_cortex-a7_neon-vfpv4
          - arm_cortex-a8_vfpv3
          - arm_cortex-a9
          - arm_cortex-a9_neon
          - arm_cortex-a9_vfpv3-d16
          - arm_cortex-a15_neon-vfpv4
          - mips_24kc
          - mips_4kec
          - mips_mips32
          - mipsel_24kc
          - mipsel_74kc
          - mipsel_mips32

    steps:
      # 1. دریافت ریپازیتوری
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. نصب ابزارهای مورد نیاز برای کامپایل
      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk git ccache gettext zlib1g-dev libssl-dev xsltproc file unzip wget python3

      # 3. دانلود SDK مناسب برای معماری
      - name: Download and Setup OpenWrt SDK for ${{ matrix.platform }}
        run: |
          SDK_URL="https://downloads.openwrt.org/releases/23.05.0/targets/${{ matrix.platform }}/sdk.tar.xz"
          mkdir -p sdk/${{ matrix.platform }}
          wget -q $SDK_URL -O sdk/${{ matrix.platform }}.tar.xz
          tar -xf sdk/${{ matrix.platform }}.tar.xz -C sdk/${{ matrix.platform }} --strip-components=1

      # 4. کامپایل فایل‌های میک برای معماری
      - name: Build Packages for ${{ matrix.platform }}
        run: |
          echo "Building for architecture: ${{ matrix.platform }}"
          pushd sdk/${{ matrix.platform }}
          make package/feeds/packages/compile V=s
          popd

      # 5. بسته‌بندی خروجی‌ها
      - name: Create Metadata and Package Files for ${{ matrix.platform }}
        run: |
          mkdir -p output/${{ matrix.platform }}
          cp -r sdk/${{ matrix.platform }}/bin/packages/* output/${{ matrix.platform }}/

          # ایجاد package.gz
          tar --warning=no-file-changed -czf "output/${{ matrix.platform }}/package.gz" -C "output/${{ matrix.platform }}" .

          # ایجاد package.manifest
          echo "Manifest for ${{ matrix.platform }} packages" > "output/${{ matrix.platform }}/package.manifest"

      # 6. آپلود به سرور SFTP
      - name: Upload to SFTP Server
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: static.115.193.75.5.clients.your-server.de
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          port: 22
          source: "output/${{ matrix.platform }}/*"
          target: "/path/to/remote/directory"
